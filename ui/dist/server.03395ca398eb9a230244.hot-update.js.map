{"version":3,"sources":["webpack:///./src/IssueEdit.jsx"],"names":["IssueEdit","React","Component","fetchData","match","search","showError","query","params","id","result","graphQLFetch","parseInt","constructor","issue","store","initialData","state","invalidFields","showingValidation","toastVisible","toastMessage","toastType","onChange","bind","handleSubmit","onValidityChange","dismissValidation","showValidation","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","valid","e","preventDefault","Object","keys","length","created","changes","data","issueUpdate","message","render","propsId","validationMessage","title","status","owner","effort","description","due","ControlLabel","toDateString","TextInput","NumInput","DateInput"],"mappings":"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","file":"server.03395ca398eb9a230244.hot-update.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n    Col, Panel, Form, FormGroup, FormControl, ControlLabel,\n    ButtonToolbar, Button, Alert,\n} from 'react-bootstrap';\n\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport DateInput from './DateInput.jsx';\nimport TextInput from './TextInput.jsx';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class IssueEdit extends React.Component {\n    static async fetchData(match, search, showError) {\n        const query = `query issue($id: Int!) {\n      issue(id: $id) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n\n        const { params: { id } } = match;\n        const result = await graphQLFetch(query, { id: parseInt(id, 10) }, showError);\n        return result;\n    }\n\n    constructor() {\n        super();\n        const issue = store.initialData ? store.initialData.issue : null;\n        delete store.initialData;\n        this.state = {\n            issue,\n            invalidFields: {},\n            showingValidation: false,\n            toastVisible: false,\n            toastMessage: '',\n            toastType: 'success',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onValidityChange = this.onValidityChange.bind(this);\n        this.dismissValidation = this.dismissValidation.bind(this);\n        this.showValidation = this.showValidation.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n        this.showError = this.showError.bind(this);\n        this.dismissToast = this.dismissToast.bind(this);\n    }\n\n    componentDidMount() {\n        const { issue } = this.state;\n        if (issue == null) this.loadData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { match: { params: { id: prevId } } } = prevProps;\n        const { match: { params: { id } } } = this.props;\n        if (id !== prevId) {\n            this.loadData();\n        }\n    }\n\n    onChange(event, naturalValue) {\n        const { name, value: textValue } = event.target;\n        const value = naturalValue === undefined ? textValue : naturalValue;\n        this.setState(prevState => ({\n            issue: { ...prevState.issue, [name]: value },\n        }));\n    }\n\n    onValidityChange(event, valid) {\n        const { name } = event.target;\n        this.setState((prevState) => {\n            const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n            if (valid) delete invalidFields[name];\n            return { invalidFields };\n        });\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        this.showValidation();\n        const { issue, invalidFields } = this.state;\n        if (Object.keys(invalidFields).length !== 0) return;\n\n        const query = `mutation issueUpdate(\n      $id: Int!\n      $changes: IssueUpdateInputs!\n    ) {\n      issueUpdate(\n        id: $id\n        changes: $changes\n      ) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n\n        const { id, created, ...changes } = issue;\n        const data = await graphQLFetch(query, { changes, id }, this.showError);\n        if (data) {\n            this.setState({ issue: data.issueUpdate });\n            this.showSuccess('Updated issue successfully');\n        }\n    }\n\n    async loadData() {\n        const { match } = this.props;\n        const data = await IssueEdit.fetchData(match, null, this.showError);\n        this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n    }\n\n    showValidation() {\n        this.setState({ showingValidation: true });\n    }\n\n    dismissValidation() {\n        this.setState({ showingValidation: false });\n    }\n\n    showSuccess(message) {\n        this.setState({\n            toastVisible: true, toastMessage: message, toastType: 'success',\n        });\n    }\n\n    showError(message) {\n        this.setState({\n            toastVisible: true, toastMessage: message, toastType: 'danger',\n        });\n    }\n\n    dismissToast() {\n        this.setState({ toastVisible: false });\n    }\n\n    render() {\n        const { issue } = this.state;\n        if (issue == null) return null;\n\n        const { issue: { id } } = this.state;\n        const { match: { params: { id: propsId } } } = this.props;\n        if (id == null) {\n            if (propsId != null) {\n                return <h3>{`Issue with ID ${propsId} not found.`}</h3>;\n            }\n            return null;\n        }\n\n        const { invalidFields, showingValidation } = this.state;\n        let validationMessage;\n        if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n            validationMessage = (\n                <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n                    Please correct invalid fields before submitting.\n                </Alert>\n            );\n        }\n\n        const { issue: { title, status } } = this.state;\n        const { issue: { owner, effort, description } } = this.state;\n        const { issue: { created, due } } = this.state;\n        const { toastVisible, toastMessage, toastType } = this.state;\n\n        return (\n            <Panel>\n                <Panel.Heading>\n                    <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n                </Panel.Heading>\n                <Panel.Body>\n                    <Form horizontal onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Created</Col>\n                            <Col sm={9}>\n                                <FormControl.Static>\n                                    {created.toDateString()}\n                                </FormControl.Static>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Status</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass=\"select\"\n                                    name=\"status\"\n                                    value={status}\n                                    onChange={this.onChange}\n                                >\n                                    <option value=\"New\">New</option>\n                                    <option value=\"Assigned\">Assigned</option>\n                                    <option value=\"Fixed\">Fixed</option>\n                                    <option value=\"Closed\">Closed</option>\n                                </FormControl>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Owner</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass={TextInput}\n                                    name=\"owner\"\n                                    value={owner}\n                                    onChange={this.onChange}\n                                    key={id}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Effort</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass={NumInput}\n                                    name=\"effort\"\n                                    value={effort}\n                                    onChange={this.onChange}\n                                    key={id}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup validationState={\n                            invalidFields.due ? 'error' : null\n                        }\n                        >\n                            <Col componentClass={ControlLabel} sm={3}>Due</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass={DateInput}\n                                    onValidityChange={this.onValidityChange}\n                                    name=\"due\"\n                                    value={due}\n                                    onChange={this.onChange}\n                                    key={id}\n                                />\n                                <FormControl.Feedback />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Title</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass={TextInput}\n                                    size={50}\n                                    name=\"title\"\n                                    value={title}\n                                    onChange={this.onChange}\n                                    key={id}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={3}>Description</Col>\n                            <Col sm={9}>\n                                <FormControl\n                                    componentClass={TextInput}\n                                    tag=\"textarea\"\n                                    rows={4}\n                                    cols={50}\n                                    name=\"description\"\n                                    value={description}\n                                    onChange={this.onChange}\n                                    key={id}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col smOffset={3} sm={6}>\n                                <ButtonToolbar>\n                                    <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                                    <LinkContainer to=\"/issues\">\n                                        <Button bsStyle=\"link\">Back</Button>\n                                    </LinkContainer>\n                                </ButtonToolbar>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col smOffset={3} sm={9}>{validationMessage}</Col>\n                        </FormGroup>\n                    </Form>\n                </Panel.Body>\n                <Panel.Footer>\n                    <Link to={`/edit/${id - 1}`}>Prev</Link>\n                    {' | '}\n                    <Link to={`/edit/${id + 1}`}>Next</Link>\n                </Panel.Footer>\n                <Toast\n                    showing={toastVisible}\n                    onDismiss={this.dismissToast}\n                    bsStyle={toastType}\n                >\n                    {toastMessage}\n                </Toast>\n            </Panel>\n        );\n    }\n}"],"sourceRoot":""}