{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","headers","cookie","userData","Page","store","context","element","body","ReactDOMServer","renderToString","redirect","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAChBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADF,CAApB;AAIA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAChD,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CACfC,SADe,CACLC,KADK,EACEI,MADF,EACUf,GAAG,CAACiB,OAAJ,CAAYC,MADtB,CAApB;AAEH;;AAED,QAAMC,QAAQ,GAAG,MAAMC,qDAAI,CAACV,SAAL,CAAeV,GAAG,CAACiB,OAAJ,CAAYC,MAA3B,CAAvB;AAEAG,uDAAK,CAACb,WAAN,GAAoBA,WAApB;AACAa,uDAAK,CAACF,QAAN,GAAiBA,QAAjB;AAEA,QAAMG,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,gBACT,2DAAC,6DAAD;AAAc,YAAQ,EAAEvB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAES;AAA1C,kBACI,2DAAC,qDAAD,OADJ,CADJ;AAKA,QAAME,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;;AAEA,MAAID,OAAO,CAACT,GAAZ,EAAiB;AACbZ,OAAG,CAAC0B,QAAJ,CAAa,GAAb,EAAkBL,OAAO,CAACT,GAA1B;AACH,GAFD,MAEO;AACHZ,OAAG,CAAC2B,IAAJ,CAASC,4DAAQ,CAACL,IAAD,EAAOhB,WAAP,EAAoBW,QAApB,CAAjB;AACH;AACJ;;AAEcpB,qEAAf,E","file":"server.d3433078af1a2a18abe9.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter, matchPath } from 'react-router-dom';\n\nimport Page from '../src/Page.jsx';\nimport template from './template.js';\nimport store from '../src/store.js';\nimport routes from '../src/routes.js';\n\nasync function render(req, res) {\n    const activeRoute = routes.find(\n        route => matchPath(req.path, route),\n    );\n\n    let initialData;\n    if (activeRoute && activeRoute.component.fetchData) {\n        const match = matchPath(req.path, activeRoute);\n        const index = req.url.indexOf('?');\n        const search = index !== -1 ? req.url.substr(index) : null;\n        initialData = await activeRoute.component\n            .fetchData(match, search, req.headers.cookie);\n    }\n\n    const userData = await Page.fetchData(req.headers.cookie);\n\n    store.initialData = initialData;\n    store.userData = userData;\n\n    const context = {};\n    const element = (\n        <StaticRouter location={req.url} context={context}>\n            <Page />\n        </StaticRouter>\n    );\n    const body = ReactDOMServer.renderToString(element);\n\n    if (context.url) {\n        res.redirect(301, context.url);\n    } else {\n        res.send(template(body, initialData, userData));\n    }\n}\n\nexport default render;"],"sourceRoot":""}